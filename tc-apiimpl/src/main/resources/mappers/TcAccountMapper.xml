<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ysu.zyw.tc.api.dao.mappers.TcAccountMapper">
  <resultMap id="BaseResultMap" type="com.ysu.zyw.tc.api.dao.po.TcAccount">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="email_activated" jdbcType="INTEGER" property="emailActivated" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="mobile_activated" jdbcType="INTEGER" property="mobileActivated" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="random_token" jdbcType="VARCHAR" property="randomToken" />
    <result column="lock_release_time" jdbcType="TIMESTAMP" property="lockReleaseTime" />
    <result column="delected" jdbcType="INTEGER" property="delected" />
    <result column="updated_person" jdbcType="VARCHAR" property="updatedPerson" />
    <result column="updated_timestamp" jdbcType="TIMESTAMP" property="updatedTimestamp" />
    <result column="created_person" jdbcType="VARCHAR" property="createdPerson" />
    <result column="created_timestamp" jdbcType="TIMESTAMP" property="createdTimestamp" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, email, email_activated, mobile, mobile_activated, region, avatar, password, random_token, 
    lock_release_time, delected, updated_person, updated_timestamp, created_person, created_timestamp, 
    nickname
  </sql>
  <select id="selectByExample" parameterType="com.ysu.zyw.tc.api.dao.po.TcAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mb_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startLine != null and pageSize != null and pageSize > 0">
      limit #{startLine} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mb_account
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from mb_account
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ysu.zyw.tc.api.dao.po.TcAccountExample">
    delete from mb_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ysu.zyw.tc.api.dao.po.TcAccount">
    insert into mb_account (id, email, email_activated, 
      mobile, mobile_activated, region, 
      avatar, password, random_token, 
      lock_release_time, delected, updated_person, 
      updated_timestamp, created_person, created_timestamp, 
      nickname)
    values (#{id,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{emailActivated,jdbcType=INTEGER}, 
      #{mobile,jdbcType=VARCHAR}, #{mobileActivated,jdbcType=INTEGER}, #{region,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{randomToken,jdbcType=VARCHAR}, 
      #{lockReleaseTime,jdbcType=TIMESTAMP}, #{delected,jdbcType=INTEGER}, #{updatedPerson,jdbcType=VARCHAR}, 
      #{updatedTimestamp,jdbcType=TIMESTAMP}, #{createdPerson,jdbcType=VARCHAR}, #{createdTimestamp,jdbcType=TIMESTAMP}, 
      #{nickname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ysu.zyw.tc.api.dao.po.TcAccount">
    insert into mb_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="emailActivated != null">
        email_activated,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="mobileActivated != null">
        mobile_activated,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="randomToken != null">
        random_token,
      </if>
      <if test="lockReleaseTime != null">
        lock_release_time,
      </if>
      <if test="delected != null">
        delected,
      </if>
      <if test="updatedPerson != null">
        updated_person,
      </if>
      <if test="updatedTimestamp != null">
        updated_timestamp,
      </if>
      <if test="createdPerson != null">
        created_person,
      </if>
      <if test="createdTimestamp != null">
        created_timestamp,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailActivated != null">
        #{emailActivated,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileActivated != null">
        #{mobileActivated,jdbcType=INTEGER},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="randomToken != null">
        #{randomToken,jdbcType=VARCHAR},
      </if>
      <if test="lockReleaseTime != null">
        #{lockReleaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delected != null">
        #{delected,jdbcType=INTEGER},
      </if>
      <if test="updatedPerson != null">
        #{updatedPerson,jdbcType=VARCHAR},
      </if>
      <if test="updatedTimestamp != null">
        #{updatedTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdPerson != null">
        #{createdPerson,jdbcType=VARCHAR},
      </if>
      <if test="createdTimestamp != null">
        #{createdTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ysu.zyw.tc.api.dao.po.TcAccountExample" resultType="java.lang.Long">
    select count(*) from mb_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mb_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.emailActivated != null">
        email_activated = #{record.emailActivated,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.mobileActivated != null">
        mobile_activated = #{record.mobileActivated,jdbcType=INTEGER},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.randomToken != null">
        random_token = #{record.randomToken,jdbcType=VARCHAR},
      </if>
      <if test="record.lockReleaseTime != null">
        lock_release_time = #{record.lockReleaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delected != null">
        delected = #{record.delected,jdbcType=INTEGER},
      </if>
      <if test="record.updatedPerson != null">
        updated_person = #{record.updatedPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTimestamp != null">
        updated_timestamp = #{record.updatedTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdPerson != null">
        created_person = #{record.createdPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTimestamp != null">
        created_timestamp = #{record.createdTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mb_account
    set id = #{record.id,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      email_activated = #{record.emailActivated,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      mobile_activated = #{record.mobileActivated,jdbcType=INTEGER},
      region = #{record.region,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      random_token = #{record.randomToken,jdbcType=VARCHAR},
      lock_release_time = #{record.lockReleaseTime,jdbcType=TIMESTAMP},
      delected = #{record.delected,jdbcType=INTEGER},
      updated_person = #{record.updatedPerson,jdbcType=VARCHAR},
      updated_timestamp = #{record.updatedTimestamp,jdbcType=TIMESTAMP},
      created_person = #{record.createdPerson,jdbcType=VARCHAR},
      created_timestamp = #{record.createdTimestamp,jdbcType=TIMESTAMP},
      nickname = #{record.nickname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ysu.zyw.tc.api.dao.po.TcAccount">
    update mb_account
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailActivated != null">
        email_activated = #{emailActivated,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileActivated != null">
        mobile_activated = #{mobileActivated,jdbcType=INTEGER},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="randomToken != null">
        random_token = #{randomToken,jdbcType=VARCHAR},
      </if>
      <if test="lockReleaseTime != null">
        lock_release_time = #{lockReleaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delected != null">
        delected = #{delected,jdbcType=INTEGER},
      </if>
      <if test="updatedPerson != null">
        updated_person = #{updatedPerson,jdbcType=VARCHAR},
      </if>
      <if test="updatedTimestamp != null">
        updated_timestamp = #{updatedTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdPerson != null">
        created_person = #{createdPerson,jdbcType=VARCHAR},
      </if>
      <if test="createdTimestamp != null">
        created_timestamp = #{createdTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ysu.zyw.tc.api.dao.po.TcAccount">
    update mb_account
    set email = #{email,jdbcType=VARCHAR},
      email_activated = #{emailActivated,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      mobile_activated = #{mobileActivated,jdbcType=INTEGER},
      region = #{region,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      random_token = #{randomToken,jdbcType=VARCHAR},
      lock_release_time = #{lockReleaseTime,jdbcType=TIMESTAMP},
      delected = #{delected,jdbcType=INTEGER},
      updated_person = #{updatedPerson,jdbcType=VARCHAR},
      updated_timestamp = #{updatedTimestamp,jdbcType=TIMESTAMP},
      created_person = #{createdPerson,jdbcType=VARCHAR},
      created_timestamp = #{createdTimestamp,jdbcType=TIMESTAMP},
      nickname = #{nickname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectPrimaryKeyByExample" parameterType="com.ysu.zyw.tc.api.dao.po.TcAccountExample" resultType="java.lang.String">
    select
    <if test="distinct">
      distinct
    </if>
    id
    from mb_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startLine != null and pageSize != null and pageSize > 0">
      limit #{startLine}, #{pageSize}
    </if>
  </select>
  <insert id="batchInsert" parameterType="com.ysu.zyw.tc.api.dao.po.TcAccount">
    insert into mb_account (
      id, 
      email, 
      email_activated, 
      mobile, 
      mobile_activated, 
      region, 
      avatar, 
      password, 
      random_token, 
      lock_release_time, 
      delected, 
      updated_person, 
      updated_timestamp, 
      created_person, 
      created_timestamp, 
      nickname
    ) values 
    <foreach collection="list" item="item" separator=", ">
      (#{item.id,jdbcType=VARCHAR}, 
      #{item.email,jdbcType=VARCHAR}, 
      #{item.emailActivated,jdbcType=INTEGER}, 
      #{item.mobile,jdbcType=VARCHAR}, 
      #{item.mobileActivated,jdbcType=INTEGER}, 
      #{item.region,jdbcType=VARCHAR}, 
      #{item.avatar,jdbcType=VARCHAR}, 
      #{item.password,jdbcType=VARCHAR}, 
      #{item.randomToken,jdbcType=VARCHAR}, 
      #{item.lockReleaseTime,jdbcType=TIMESTAMP}, 
      #{item.delected,jdbcType=INTEGER}, 
      #{item.updatedPerson,jdbcType=VARCHAR}, 
      #{item.updatedTimestamp,jdbcType=TIMESTAMP}, 
      #{item.createdPerson,jdbcType=VARCHAR}, 
      #{item.createdTimestamp,jdbcType=TIMESTAMP}, 
      #{item.nickname,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>