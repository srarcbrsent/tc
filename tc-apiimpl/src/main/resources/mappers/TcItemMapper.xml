<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ysu.zyw.tc.api.dao.mappers.TcItemMapper">
  <resultMap id="BaseResultMap" type="com.ysu.zyw.tc.api.dao.po.TcItem">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="shop_id" jdbcType="VARCHAR" property="shopId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="sales_volume" jdbcType="INTEGER" property="salesVolume" />
    <result column="fav_volume" jdbcType="INTEGER" property="favVolume" />
    <result column="comments_volue" jdbcType="INTEGER" property="commentsVolue" />
    <result column="updated_person" jdbcType="VARCHAR" property="updatedPerson" />
    <result column="updated_timestamp" jdbcType="TIMESTAMP" property="updatedTimestamp" />
    <result column="created_person" jdbcType="VARCHAR" property="createdPerson" />
    <result column="created_timestamp" jdbcType="TIMESTAMP" property="createdTimestamp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shop_id, title, description, price, stock, sales_volume, fav_volume, comments_volue, 
    updated_person, updated_timestamp, created_person, created_timestamp
  </sql>
  <select id="selectByExample" parameterType="com.ysu.zyw.tc.api.dao.po.TcItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from it_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startLine != null and pageSize != null and pageSize > 0">
      limit #{startLine} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from it_item
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from it_item
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ysu.zyw.tc.api.dao.po.TcItemExample">
    delete from it_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ysu.zyw.tc.api.dao.po.TcItem">
    insert into it_item (id, shop_id, title, 
      description, price, stock, 
      sales_volume, fav_volume, comments_volue, 
      updated_person, updated_timestamp, created_person, 
      created_timestamp)
    values (#{id,jdbcType=VARCHAR}, #{shopId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{price,jdbcType=BIGINT}, #{stock,jdbcType=INTEGER}, 
      #{salesVolume,jdbcType=INTEGER}, #{favVolume,jdbcType=INTEGER}, #{commentsVolue,jdbcType=INTEGER}, 
      #{updatedPerson,jdbcType=VARCHAR}, #{updatedTimestamp,jdbcType=TIMESTAMP}, #{createdPerson,jdbcType=VARCHAR}, 
      #{createdTimestamp,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ysu.zyw.tc.api.dao.po.TcItem">
    insert into it_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="salesVolume != null">
        sales_volume,
      </if>
      <if test="favVolume != null">
        fav_volume,
      </if>
      <if test="commentsVolue != null">
        comments_volue,
      </if>
      <if test="updatedPerson != null">
        updated_person,
      </if>
      <if test="updatedTimestamp != null">
        updated_timestamp,
      </if>
      <if test="createdPerson != null">
        created_person,
      </if>
      <if test="createdTimestamp != null">
        created_timestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null">
        #{salesVolume,jdbcType=INTEGER},
      </if>
      <if test="favVolume != null">
        #{favVolume,jdbcType=INTEGER},
      </if>
      <if test="commentsVolue != null">
        #{commentsVolue,jdbcType=INTEGER},
      </if>
      <if test="updatedPerson != null">
        #{updatedPerson,jdbcType=VARCHAR},
      </if>
      <if test="updatedTimestamp != null">
        #{updatedTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdPerson != null">
        #{createdPerson,jdbcType=VARCHAR},
      </if>
      <if test="createdTimestamp != null">
        #{createdTimestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ysu.zyw.tc.api.dao.po.TcItemExample" resultType="java.lang.Long">
    select count(*) from it_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update it_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.salesVolume != null">
        sales_volume = #{record.salesVolume,jdbcType=INTEGER},
      </if>
      <if test="record.favVolume != null">
        fav_volume = #{record.favVolume,jdbcType=INTEGER},
      </if>
      <if test="record.commentsVolue != null">
        comments_volue = #{record.commentsVolue,jdbcType=INTEGER},
      </if>
      <if test="record.updatedPerson != null">
        updated_person = #{record.updatedPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTimestamp != null">
        updated_timestamp = #{record.updatedTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdPerson != null">
        created_person = #{record.createdPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTimestamp != null">
        created_timestamp = #{record.createdTimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update it_item
    set id = #{record.id,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=BIGINT},
      stock = #{record.stock,jdbcType=INTEGER},
      sales_volume = #{record.salesVolume,jdbcType=INTEGER},
      fav_volume = #{record.favVolume,jdbcType=INTEGER},
      comments_volue = #{record.commentsVolue,jdbcType=INTEGER},
      updated_person = #{record.updatedPerson,jdbcType=VARCHAR},
      updated_timestamp = #{record.updatedTimestamp,jdbcType=TIMESTAMP},
      created_person = #{record.createdPerson,jdbcType=VARCHAR},
      created_timestamp = #{record.createdTimestamp,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ysu.zyw.tc.api.dao.po.TcItem">
    update it_item
    <set>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null">
        sales_volume = #{salesVolume,jdbcType=INTEGER},
      </if>
      <if test="favVolume != null">
        fav_volume = #{favVolume,jdbcType=INTEGER},
      </if>
      <if test="commentsVolue != null">
        comments_volue = #{commentsVolue,jdbcType=INTEGER},
      </if>
      <if test="updatedPerson != null">
        updated_person = #{updatedPerson,jdbcType=VARCHAR},
      </if>
      <if test="updatedTimestamp != null">
        updated_timestamp = #{updatedTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdPerson != null">
        created_person = #{createdPerson,jdbcType=VARCHAR},
      </if>
      <if test="createdTimestamp != null">
        created_timestamp = #{createdTimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ysu.zyw.tc.api.dao.po.TcItem">
    update it_item
    set shop_id = #{shopId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=BIGINT},
      stock = #{stock,jdbcType=INTEGER},
      sales_volume = #{salesVolume,jdbcType=INTEGER},
      fav_volume = #{favVolume,jdbcType=INTEGER},
      comments_volue = #{commentsVolue,jdbcType=INTEGER},
      updated_person = #{updatedPerson,jdbcType=VARCHAR},
      updated_timestamp = #{updatedTimestamp,jdbcType=TIMESTAMP},
      created_person = #{createdPerson,jdbcType=VARCHAR},
      created_timestamp = #{createdTimestamp,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectPrimaryKeyByExample" parameterType="com.ysu.zyw.tc.api.dao.po.TcItemExample" resultType="java.lang.String">
    select
    <if test="distinct">
      distinct
    </if>
    id
    from it_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startLine != null and pageSize != null and pageSize > 0">
      limit #{startLine}, #{pageSize}
    </if>
  </select>
  <insert id="batchInsert" parameterType="com.ysu.zyw.tc.api.dao.po.TcItem">
    insert into it_item (
      id, 
      shop_id, 
      title, 
      description, 
      price, 
      stock, 
      sales_volume, 
      fav_volume, 
      comments_volue, 
      updated_person, 
      updated_timestamp, 
      created_person, 
      created_timestamp
    ) values 
    <foreach collection="list" item="item" separator=", ">
      (#{item.id,jdbcType=VARCHAR}, 
      #{item.shopId,jdbcType=VARCHAR}, 
      #{item.title,jdbcType=VARCHAR}, 
      #{item.description,jdbcType=VARCHAR}, 
      #{item.price,jdbcType=BIGINT}, 
      #{item.stock,jdbcType=INTEGER}, 
      #{item.salesVolume,jdbcType=INTEGER}, 
      #{item.favVolume,jdbcType=INTEGER}, 
      #{item.commentsVolue,jdbcType=INTEGER}, 
      #{item.updatedPerson,jdbcType=VARCHAR}, 
      #{item.updatedTimestamp,jdbcType=TIMESTAMP}, 
      #{item.createdPerson,jdbcType=VARCHAR}, 
      #{item.createdTimestamp,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
</mapper>